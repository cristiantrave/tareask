package com.cristian.tareask.model;
// Generated 04-jul-2016 12:42:26 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Group generated by hbm2java
 */
@Entity
@Table(name="group"
    ,catalog="tareask"
)
public class Group  implements java.io.Serializable {


     private Integer id;
     private GroupStatus groupStatus;
     private Set<GroupMessage> groupMessages = new HashSet<GroupMessage>(0);
     private Set<GroupUsers> groupUserses = new HashSet<GroupUsers>(0);
     private Set<Task> tasks = new HashSet<Task>(0);

    public Group() {
    }

	
    public Group(GroupStatus groupStatus) {
        this.groupStatus = groupStatus;
    }
    public Group(GroupStatus groupStatus, Set<GroupMessage> groupMessages, Set<GroupUsers> groupUserses, Set<Task> tasks) {
       this.groupStatus = groupStatus;
       this.groupMessages = groupMessages;
       this.groupUserses = groupUserses;
       this.tasks = tasks;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="status", nullable=false)
    public GroupStatus getGroupStatus() {
        return this.groupStatus;
    }
    
    public void setGroupStatus(GroupStatus groupStatus) {
        this.groupStatus = groupStatus;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="group")
    public Set<GroupMessage> getGroupMessages() {
        return this.groupMessages;
    }
    
    public void setGroupMessages(Set<GroupMessage> groupMessages) {
        this.groupMessages = groupMessages;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="group")
    public Set<GroupUsers> getGroupUserses() {
        return this.groupUserses;
    }
    
    public void setGroupUserses(Set<GroupUsers> groupUserses) {
        this.groupUserses = groupUserses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="group")
    public Set<Task> getTasks() {
        return this.tasks;
    }
    
    public void setTasks(Set<Task> tasks) {
        this.tasks = tasks;
    }




}


