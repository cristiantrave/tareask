package com.cristian.tareask.model;
// Generated 04-jul-2016 12:42:26 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Email generated by hbm2java
 */
@Entity
@Table(name="email"
    ,catalog="tareask"
)
public class Email  implements java.io.Serializable {


     private Integer id;
     private EmailStatus emailStatus;
     private User user;
     private Date dateSync;
     private Set<EmailFolder> emailFolders = new HashSet<EmailFolder>(0);
     private Set<EmailContact> emailContacts = new HashSet<EmailContact>(0);

    public Email() {
    }

	
    public Email(EmailStatus emailStatus, User user, Date dateSync) {
        this.emailStatus = emailStatus;
        this.user = user;
        this.dateSync = dateSync;
    }
    public Email(EmailStatus emailStatus, User user, Date dateSync, Set<EmailFolder> emailFolders, Set<EmailContact> emailContacts) {
       this.emailStatus = emailStatus;
       this.user = user;
       this.dateSync = dateSync;
       this.emailFolders = emailFolders;
       this.emailContacts = emailContacts;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="status", nullable=false)
    public EmailStatus getEmailStatus() {
        return this.emailStatus;
    }
    
    public void setEmailStatus(EmailStatus emailStatus) {
        this.emailStatus = emailStatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dateSync", nullable=false, length=19)
    public Date getDateSync() {
        return this.dateSync;
    }
    
    public void setDateSync(Date dateSync) {
        this.dateSync = dateSync;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="email")
    public Set<EmailFolder> getEmailFolders() {
        return this.emailFolders;
    }
    
    public void setEmailFolders(Set<EmailFolder> emailFolders) {
        this.emailFolders = emailFolders;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="email")
    public Set<EmailContact> getEmailContacts() {
        return this.emailContacts;
    }
    
    public void setEmailContacts(Set<EmailContact> emailContacts) {
        this.emailContacts = emailContacts;
    }




}


