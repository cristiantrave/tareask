package com.cristian.tareask.model;
// Generated 04-jul-2016 12:42:26 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * EmailConversation generated by hbm2java
 */
@Entity
@Table(name="email_conversation"
    ,catalog="tareask"
)
public class EmailConversation  implements java.io.Serializable {


     private Integer id;
     private EmailFolder emailFolder;
     private EmailMessage emailMessage;
     private boolean readed;
     private Set<EmailMessage> emailMessages = new HashSet<EmailMessage>(0);
     private Set<MessageReceptor> messageReceptors = new HashSet<MessageReceptor>(0);

    public EmailConversation() {
    }

	
    public EmailConversation(boolean readed) {
        this.readed = readed;
    }
    public EmailConversation(EmailFolder emailFolder, EmailMessage emailMessage, boolean readed, Set<EmailMessage> emailMessages, Set<MessageReceptor> messageReceptors) {
       this.emailFolder = emailFolder;
       this.emailMessage = emailMessage;
       this.readed = readed;
       this.emailMessages = emailMessages;
       this.messageReceptors = messageReceptors;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="folder")
    public EmailFolder getEmailFolder() {
        return this.emailFolder;
    }
    
    public void setEmailFolder(EmailFolder emailFolder) {
        this.emailFolder = emailFolder;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="last")
    public EmailMessage getEmailMessage() {
        return this.emailMessage;
    }
    
    public void setEmailMessage(EmailMessage emailMessage) {
        this.emailMessage = emailMessage;
    }

    
    @Column(name="readed", nullable=false)
    public boolean isReaded() {
        return this.readed;
    }
    
    public void setReaded(boolean readed) {
        this.readed = readed;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="emailConversation")
    public Set<EmailMessage> getEmailMessages() {
        return this.emailMessages;
    }
    
    public void setEmailMessages(Set<EmailMessage> emailMessages) {
        this.emailMessages = emailMessages;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="emailConversation")
    public Set<MessageReceptor> getMessageReceptors() {
        return this.messageReceptors;
    }
    
    public void setMessageReceptors(Set<MessageReceptor> messageReceptors) {
        this.messageReceptors = messageReceptors;
    }




}


