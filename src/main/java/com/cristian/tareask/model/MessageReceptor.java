package com.cristian.tareask.model;
// Generated 04-jul-2016 12:42:26 by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * MessageReceptor generated by hbm2java
 */
@Entity
@Table(name="message_receptor"
    ,catalog="tareask"
)
public class MessageReceptor  implements java.io.Serializable {


     private Integer id;
     private EmailConversation emailConversation;
     private EmailMessage emailMessage;
     private User user;

    public MessageReceptor() {
    }

    public MessageReceptor(EmailConversation emailConversation, EmailMessage emailMessage, User user) {
       this.emailConversation = emailConversation;
       this.emailMessage = emailMessage;
       this.user = user;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="conversation", nullable=false)
    public EmailConversation getEmailConversation() {
        return this.emailConversation;
    }
    
    public void setEmailConversation(EmailConversation emailConversation) {
        this.emailConversation = emailConversation;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="message", nullable=false)
    public EmailMessage getEmailMessage() {
        return this.emailMessage;
    }
    
    public void setEmailMessage(EmailMessage emailMessage) {
        this.emailMessage = emailMessage;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="receptor", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }




}


