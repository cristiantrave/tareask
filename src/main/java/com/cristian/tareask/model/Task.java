package com.cristian.tareask.model;
// Generated 04-jul-2016 12:42:26 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Task generated by hbm2java
 */
@Entity
@Table(name="task"
    ,catalog="tareask"
)
public class Task  implements java.io.Serializable {


     private Integer id;
     private Group group;
     private TaskPriority taskPriority;
     private TaskStatus taskStatus;
     private User user;
     private String title;
     private String description;
     private Date dateCreate;
     private Date dateFinish;
     private Set<Incidence> incidences = new HashSet<Incidence>(0);
     private Set<TaskReport> taskReports = new HashSet<TaskReport>(0);
     private Set<Milestone> milestones = new HashSet<Milestone>(0);

    public Task() {
    }

	
    public Task(TaskPriority taskPriority, TaskStatus taskStatus, String title, String description, Date dateCreate, Date dateFinish) {
        this.taskPriority = taskPriority;
        this.taskStatus = taskStatus;
        this.title = title;
        this.description = description;
        this.dateCreate = dateCreate;
        this.dateFinish = dateFinish;
    }
    public Task(Group group, TaskPriority taskPriority, TaskStatus taskStatus, User user, String title, String description, Date dateCreate, Date dateFinish, Set<Incidence> incidences, Set<TaskReport> taskReports, Set<Milestone> milestones) {
       this.group = group;
       this.taskPriority = taskPriority;
       this.taskStatus = taskStatus;
       this.user = user;
       this.title = title;
       this.description = description;
       this.dateCreate = dateCreate;
       this.dateFinish = dateFinish;
       this.incidences = incidences;
       this.taskReports = taskReports;
       this.milestones = milestones;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="group")
    public Group getGroup() {
        return this.group;
    }
    
    public void setGroup(Group group) {
        this.group = group;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="priority", nullable=false)
    public TaskPriority getTaskPriority() {
        return this.taskPriority;
    }
    
    public void setTaskPriority(TaskPriority taskPriority) {
        this.taskPriority = taskPriority;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="status", nullable=false)
    public TaskStatus getTaskStatus() {
        return this.taskStatus;
    }
    
    public void setTaskStatus(TaskStatus taskStatus) {
        this.taskStatus = taskStatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user")
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

    
    @Column(name="title", nullable=false, length=50)
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }

    
    @Column(name="description", nullable=false, length=65535)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dateCreate", nullable=false, length=19)
    public Date getDateCreate() {
        return this.dateCreate;
    }
    
    public void setDateCreate(Date dateCreate) {
        this.dateCreate = dateCreate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dateFinish", nullable=false, length=19)
    public Date getDateFinish() {
        return this.dateFinish;
    }
    
    public void setDateFinish(Date dateFinish) {
        this.dateFinish = dateFinish;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="task")
    public Set<Incidence> getIncidences() {
        return this.incidences;
    }
    
    public void setIncidences(Set<Incidence> incidences) {
        this.incidences = incidences;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="task")
    public Set<TaskReport> getTaskReports() {
        return this.taskReports;
    }
    
    public void setTaskReports(Set<TaskReport> taskReports) {
        this.taskReports = taskReports;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="task")
    public Set<Milestone> getMilestones() {
        return this.milestones;
    }
    
    public void setMilestones(Set<Milestone> milestones) {
        this.milestones = milestones;
    }




}


